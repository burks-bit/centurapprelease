{"ast":null,"code":"var _jsxFileName = \"E:\\\\Company Profiles\\\\centurmgmt\\\\reactappcentur\\\\src\\\\pages\\\\CompanyLocation.jsx\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      position: null\n    };\n    this.geocodeAddress = () => {\n      const {\n        google\n      } = this.props;\n      const geocoder = new google.maps.Geocoder();\n      const address = 'Unit B, PSMID Building, 116-9th Avenue, Quezon City, Philippines';\n      geocoder.geocode({\n        address\n      }, (results, status) => {\n        if (status === 'OK') {\n          const location = results[0].geometry.location;\n          this.setState({\n            position: location\n          });\n        } else {\n          console.error('Geocode was not successful for the following reason:', status);\n        }\n      });\n    };\n  }\n  componentDidMount() {\n    // Geocode the address and update state with the position\n    this.geocodeAddress();\n  }\n  render() {\n    const {\n      position\n    } = this.state;\n    if (!position) return null;\n    return /*#__PURE__*/_jsxDEV(Map, {\n      google: this.props.google,\n      zoom: 13,\n      style: {\n        width: '65%',\n        height: '500px'\n      },\n      initialCenter: {\n        lat: position.lat(),\n        lng: position.lng()\n      },\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: position.lat(),\n          lng: position.lng()\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCgkagHMrocg_Wc61Ay4KLSY-AkGUBCaLo'\n})(MapContainer);","map":{"version":3,"names":["React","Component","Map","GoogleApiWrapper","Marker","jsxDEV","_jsxDEV","MapContainer","constructor","args","state","position","geocodeAddress","google","props","geocoder","maps","Geocoder","address","geocode","results","status","location","geometry","setState","console","error","componentDidMount","render","zoom","style","width","height","initialCenter","lat","lng","children","fileName","_jsxFileName","lineNumber","columnNumber","apiKey"],"sources":["E:/Company Profiles/centurmgmt/reactappcentur/src/pages/CompanyLocation.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nclass MapContainer extends Component {\r\n    state = {\r\n        position: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Geocode the address and update state with the position\r\n        this.geocodeAddress();\r\n    }\r\n\r\n    geocodeAddress = () => {\r\n        const { google } = this.props;\r\n        const geocoder = new google.maps.Geocoder();\r\n        const address = 'Unit B, PSMID Building, 116-9th Avenue, Quezon City, Philippines';\r\n\r\n        geocoder.geocode({ address }, (results, status) => {\r\n            if (status === 'OK') {\r\n                const location = results[0].geometry.location;\r\n                this.setState({ position: location });\r\n            } else {\r\n                console.error('Geocode was not successful for the following reason:', status);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { position } = this.state;\r\n        if (!position) return null;\r\n\r\n        return (\r\n            <Map\r\n                google={this.props.google}\r\n                zoom={13}\r\n                style={{ width: '65%', height: '500px' }}\r\n                initialCenter={{\r\n                    lat: position.lat(),\r\n                    lng: position.lng()\r\n                }}\r\n            >\r\n                <Marker position={{ lat: position.lat(), lng: position.lng() }} />\r\n            </Map>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyCgkagHMrocg_Wc61Ay4KLSY-AkGUBCaLo'\r\n})(MapContainer);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,GAAG,EAAEC,gBAAgB,EAAEC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,YAAY,SAASN,SAAS,CAAC;EAAAO,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACjCC,KAAK,GAAG;MACJC,QAAQ,EAAE;IACd,CAAC;IAAA,KAODC,cAAc,GAAG,MAAM;MACnB,MAAM;QAAEC;MAAO,CAAC,GAAG,IAAI,CAACC,KAAK;MAC7B,MAAMC,QAAQ,GAAG,IAAIF,MAAM,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC;MAC3C,MAAMC,OAAO,GAAG,kEAAkE;MAElFH,QAAQ,CAACI,OAAO,CAAC;QAAED;MAAQ,CAAC,EAAE,CAACE,OAAO,EAAEC,MAAM,KAAK;QAC/C,IAAIA,MAAM,KAAK,IAAI,EAAE;UACjB,MAAMC,QAAQ,GAAGF,OAAO,CAAC,CAAC,CAAC,CAACG,QAAQ,CAACD,QAAQ;UAC7C,IAAI,CAACE,QAAQ,CAAC;YAAEb,QAAQ,EAAEW;UAAS,CAAC,CAAC;QACzC,CAAC,MAAM;UACHG,OAAO,CAACC,KAAK,CAAC,sDAAsD,EAAEL,MAAM,CAAC;QACjF;MACJ,CAAC,CAAC;IACN,CAAC;EAAA;EAlBDM,iBAAiBA,CAAA,EAAG;IAChB;IACA,IAAI,CAACf,cAAc,CAAC,CAAC;EACzB;EAiBAgB,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEjB;IAAS,CAAC,GAAG,IAAI,CAACD,KAAK;IAC/B,IAAI,CAACC,QAAQ,EAAE,OAAO,IAAI;IAE1B,oBACIL,OAAA,CAACJ,GAAG;MACAW,MAAM,EAAE,IAAI,CAACC,KAAK,CAACD,MAAO;MAC1BgB,IAAI,EAAE,EAAG;MACTC,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAQ,CAAE;MACzCC,aAAa,EAAE;QACXC,GAAG,EAAEvB,QAAQ,CAACuB,GAAG,CAAC,CAAC;QACnBC,GAAG,EAAExB,QAAQ,CAACwB,GAAG,CAAC;MACtB,CAAE;MAAAC,QAAA,eAEF9B,OAAA,CAACF,MAAM;QAACO,QAAQ,EAAE;UAAEuB,GAAG,EAAEvB,QAAQ,CAACuB,GAAG,CAAC,CAAC;UAAEC,GAAG,EAAExB,QAAQ,CAACwB,GAAG,CAAC;QAAE;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAEd;AACJ;AAEA,eAAerC,gBAAgB,CAAC;EAC5BsC,MAAM,EAAE;AACZ,CAAC,CAAC,CAAClC,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}